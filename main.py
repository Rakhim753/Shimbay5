from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils import executor
import logging
import os

API_TOKEN = os.getenv("7705891566:AAETdc4uIOJJXDeGPw9jKOiTy-A7SSjkasQ")

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –ö–Ω–æ–ø–∫–∞–ª–∞—Ä
menu = ReplyKeyboardMarkup(resize_keyboard=True)
menu.add(
    KeyboardButton("üöï –ù–û–ö–ò–° –®–´–ú–ë–ê–ô"),
    KeyboardButton("üöï –®–´–ú–ë–ê–ô –ù–û–ö–ò–°")
)

# /start –∫–æ–º–∞–Ω–¥–∞—Å—ã
@dp.message_handler(commands=['start'])
async def start_handler(message: types.Message):
    await message.answer(
        "“ö–æ—à –∫–µ–ª–¥—ñ“£—ñ–∑! –ë–∞“ì—ã—Ç—ã“£—ã–∑–¥—ã —Ç–∞“£–¥–∞“£—ã–∑:",
        reply_markup=menu
    )

# –ù–û–ö–ò–° –®–´–ú–ë–ê–ô –∫–Ω–æ–ø–∫–∞—Å—ã
@dp.message_handler(lambda message: message.text == "üöï –ù–û–ö–ò–° –®–´–ú–ë–ê–ô")
async def nokis_to_shimbay(message: types.Message):
    await message.answer(
        "–ù –û –ö –ò –° –¢ –ï –ù\n\n"
        "‚§µÔ∏è‚§µÔ∏è‚§µÔ∏è‚§µÔ∏è‚§µÔ∏è‚§µÔ∏è‚§µÔ∏è\n\n"
        "–®–´–ú–ë–ê–ô–ì–ê –ñ–£–†–ï–ú–ò–ó\n\n"
        "–ê–ú–ê–ù–ê–¢ –ë–û–õ–°–ê –ê–õ–´–ü –ö–ï–¢–ï–ú–ò–ó\n\n"
        "‚òéÔ∏è +998770149797\n"
        "‚òéÔ∏è +998770149797"
    )

# –®–´–ú–ë–ê–ô –ù–û–ö–ò–° –∫–Ω–æ–ø–∫–∞—Å—ã
@dp.message_handler(lambda message: message.text == "üöï –®–´–ú–ë–ê–ô –ù–û–ö–ò–°")
async def shimbay_to_nokis(message: types.Message):
    await message.answer(
        "–® –´ –ú –ë –ê –ô –î –ê –ù\n\n"
        "‚§µÔ∏è‚§µÔ∏è‚§µÔ∏è‚§µÔ∏è‚§µÔ∏è‚§µÔ∏è‚§µÔ∏è\n\n"
        "–ù–û–ö–ò–°–ö–ï –ñ–£–†–ï–ú–ò–ó\n\n"
        "–ê–ú–ê–ù–ê–¢ –ë–û–õ–°–ê –ê–õ–´–ü –ö–ï–¢–ï–ú–ò–ó\n\n"
        "‚òéÔ∏è +998770149797\n"
        "‚òéÔ∏è +998770149797"
    )

# “ö–∞–ª“ì–∞–Ω —Ö–∞–±–∞—Ä–ª–∞–º–∞–ª–∞—Ä
@dp.message_handler()
async def echo_message(message: types.Message):
    await message.answer("–•–∞–±–∞—Ä—ã“£—ã–∑ “õ–∞–±—ã–ª–¥–∞–Ω–¥—ã. –ó–≤–æ–Ω–æ–∫ –µ—Ç–∏“£ ‚òéÔ∏è")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
